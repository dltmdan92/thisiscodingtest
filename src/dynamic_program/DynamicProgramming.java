package dynamic_program;

/**
 * 다이나믹 프로그래밍은 메모리를 적절히 사용해서 수행 시간 효율성을 비약적으로 향상 시키는 방법
 *
 * 이미 계산된 결과는 별도의 메모리 영역에 저장해서 다시 계산하지 않도록 한다.
 *
 * 다이나믹 프로그래밍은 동적 계획법이라고 부름
 * - 일반적인 프로그래밍 분야에서의 동적(dynamic)이란 어떤 의미인가?
 * ---> 자료 구조에서 동적 할 당(Dynamic Allocation)은 '프로그램이 실행되는 도중에 실행에 필요한 메모리를 할당하는 기법'을 뜻한다.
 * --> BUT!!!!!!!!!! 다이나믹 프로그래밍에서 '다이나믹'은 별다른 의미 없이 사용된 언어 이다.
 *
 *
 * 다이나믹 프로그래밍은 문제가 다음의 조건을 만족할 때 사용할 수 있다.
 * 1. 최적 부분 구조 (Optimal Substructure)
 *      - 큰 문제를 작은 문제로 나눌 수 있으며, 작은 문제의 답을 모아서 큰 문제를 해결할 수 있다.
 * 2. 중복되는 부분 문제 (Overlapping Subproblem)
 *      - 동일한 작은 문제를 반복적으로 해결해야 한다.
 *
 * DP의 대표적은 문제는 피보나치 수열이다
 * 앞의 두 수를 더한 값이 그 다음의 수의 값이다.
 * 1,1,2,3,5,8,13,21,34,55,89 ....     = A1 = 1, A2 = 1,   An = An-1 + An-2
 */
public class DynamicProgramming {



}
